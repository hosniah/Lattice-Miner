<?xml version="1.0" encoding="ISO-8859-1" ?>
<?xml-stylesheet href="xsl/class.xsl" type="text/xsl"?>
<jcsc>
  <package>fca.core.util</package>
  <class>LogicalFormula</class>
  <methods>11</methods>
  <author><![CDATA[]]></author>
  <count>5</count>
  <ncss>232</ncss>
  <lines>340</lines>
  <unittestclasses>0</unittestclasses>
  <unittests>0</unittests>
  <violation>
    <rule>
      <name>MaxNumberOfNCSSPerMethod</name>
      <severity>4</severity>
      <category>Metrics</category>
    </rule>
    <classname>LogicalFormula</classname>
    <package>fca.core.util</package>
    <line>46</line>
    <column>28</column>
    <message><![CDATA[method declaration 'parse' has too many NCSS (100) - 25 are allowed]]></message>
    <source>H:\eclipse\workspace\LatticeMiner\src\fca\core\util\LogicalFormula.java</source>
  </violation>
  <violation>
    <rule>
      <name>MaxNumberOfCCNPerMethod</name>
      <severity>4</severity>
      <category>Metrics</category>
    </rule>
    <classname>LogicalFormula</classname>
    <package>fca.core.util</package>
    <line>46</line>
    <column>28</column>
    <message><![CDATA[method declaration 'parse' has a too high CCN (12) - 10 are allowed]]></message>
    <source>H:\eclipse\workspace\LatticeMiner\src\fca\core\util\LogicalFormula.java</source>
  </violation>
  <violation>
    <rule>
      <name>MaxNumberOfCCNPerMethod</name>
      <severity>4</severity>
      <category>Metrics</category>
    </rule>
    <classname>LogicalFormula</classname>
    <package>fca.core.util</package>
    <line>194</line>
    <column>39</column>
    <message><![CDATA[method declaration 'getErrorMessage' has a too high CCN (15) - 10 are allowed]]></message>
    <source>H:\eclipse\workspace\LatticeMiner\src\fca\core\util\LogicalFormula.java</source>
  </violation>
  <violation>
    <rule>
      <name>MaxNumberOfNCSSPerMethod</name>
      <severity>4</severity>
      <category>Metrics</category>
    </rule>
    <classname>LogicalFormula</classname>
    <package>fca.core.util</package>
    <line>230</line>
    <column>48</column>
    <message><![CDATA[method declaration 'accept' has too many NCSS (50) - 25 are allowed]]></message>
    <source>H:\eclipse\workspace\LatticeMiner\src\fca\core\util\LogicalFormula.java</source>
  </violation>
  <violation>
    <rule>
      <name>MaxNumberOfCCNPerMethod</name>
      <severity>4</severity>
      <category>Metrics</category>
    </rule>
    <classname>LogicalFormula</classname>
    <package>fca.core.util</package>
    <line>230</line>
    <column>48</column>
    <message><![CDATA[method declaration 'accept' has a too high CCN (12) - 10 are allowed]]></message>
    <source>H:\eclipse\workspace\LatticeMiner\src\fca\core\util\LogicalFormula.java</source>
  </violation>
  <metric>
    <method>>
      <name>LogicalFormula.constructor()</name>
      <line>40</line>
      <column>16</column>
      <ncss>4</ncss>
      <ccn>1</ccn>
    </method>
  </metric>
  <metric>
    <method>>
      <name>LogicalFormula.parse()</name>
      <line>46</line>
      <column>28</column>
      <ncss>100</ncss>
      <ccn>12</ccn>
    </method>
  </metric>
  <metric>
    <method>>
      <name>LogicalFormula.isValid()</name>
      <line>183</line>
      <column>32</column>
      <ncss>2</ncss>
      <ccn>1</ccn>
    </method>
  </metric>
  <metric>
    <method>>
      <name>LogicalFormula.getErrorCode()</name>
      <line>190</line>
      <column>33</column>
      <ncss>2</ncss>
      <ccn>1</ccn>
    </method>
  </metric>
  <metric>
    <method>>
      <name>LogicalFormula.getErrorMessage()</name>
      <line>194</line>
      <column>39</column>
      <ncss>16</ncss>
      <ccn>15</ccn>
    </method>
  </metric>
  <metric>
    <method>>
      <name>LogicalFormula.getErrorPosition()</name>
      <line>212</line>
      <column>37</column>
      <ncss>2</ncss>
      <ccn>1</ccn>
    </method>
  </metric>
  <metric>
    <method>>
      <name>LogicalFormula.getErrorLength()</name>
      <line>219</line>
      <column>35</column>
      <ncss>2</ncss>
      <ccn>1</ccn>
    </method>
  </metric>
  <metric>
    <method>>
      <name>LogicalFormula.getElementCount()</name>
      <line>226</line>
      <column>36</column>
      <ncss>2</ncss>
      <ccn>1</ccn>
    </method>
  </metric>
  <metric>
    <method>>
      <name>LogicalFormula.accept()</name>
      <line>230</line>
      <column>48</column>
      <ncss>50</ncss>
      <ccn>12</ccn>
    </method>
  </metric>
  <metric>
    <method>>
      <name>LogicalFormula.evaluateLastOperator()</name>
      <line>310</line>
      <column>43</column>
      <ncss>21</ncss>
      <ccn>2</ccn>
    </method>
  </metric>
  <metric>
    <method>>
      <name>LogicalFormula.priority()</name>
      <line>332</line>
      <column>39</column>
      <ncss>8</ncss>
      <ccn>7</ccn>
    </method>
  </metric>
</jcsc>
