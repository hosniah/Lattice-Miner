<?xml version="1.0" encoding="ISO-8859-1" ?>
<?xml-stylesheet href="xsl/class.xsl" type="text/xsl"?>
<jcsc>
  <package>fca.core.lattice</package>
  <class>NourineRaynaudAlgo</class>
  <methods>9</methods>
  <author><![CDATA[]]></author>
  <count>2</count>
  <ncss>126</ncss>
  <lines>183</lines>
  <unittestclasses>0</unittestclasses>
  <unittests>0</unittests>
  <violation>
    <rule>
      <name>MaxNumberOfNCSSPerMethod</name>
      <severity>4</severity>
      <category>Metrics</category>
    </rule>
    <classname>NourineRaynaudAlgo</classname>
    <package>fca.core.lattice</package>
    <line>35</line>
    <column>37</column>
    <message><![CDATA[method declaration 'generateFamily' has too many NCSS (29) - 25 are allowed]]></message>
    <source>H:\eclipse\workspace\LatticeMiner\src\fca\core\lattice\NourineRaynaudAlgo.java</source>
  </violation>
  <violation>
    <rule>
      <name>MaxNumberOfNCSSPerMethod</name>
      <severity>4</severity>
      <category>Metrics</category>
    </rule>
    <classname>NourineRaynaudAlgo</classname>
    <package>fca.core.lattice</package>
    <line>78</line>
    <column>35</column>
    <message><![CDATA[method declaration 'buildLattice' has too many NCSS (28) - 25 are allowed]]></message>
    <source>H:\eclipse\workspace\LatticeMiner\src\fca\core\lattice\NourineRaynaudAlgo.java</source>
  </violation>
  <metric>
    <method>>
      <name>NourineRaynaudAlgo.constructor()</name>
      <line>18</line>
      <column>16</column>
      <ncss>5</ncss>
      <ccn>1</ccn>
    </method>
  </metric>
  <metric>
    <method>>
      <name>NourineRaynaudAlgo.computeBasis()</name>
      <line>25</line>
      <column>35</column>
      <ncss>6</ncss>
      <ccn>2</ccn>
    </method>
  </metric>
  <metric>
    <method>>
      <name>NourineRaynaudAlgo.generateFamily()</name>
      <line>35</line>
      <column>37</column>
      <ncss>29</ncss>
      <ccn>6</ccn>
    </method>
  </metric>
  <metric>
    <method>>
      <name>NourineRaynaudAlgo.buildLattice()</name>
      <line>78</line>
      <column>35</column>
      <ncss>28</ncss>
      <ccn>7</ccn>
    </method>
  </metric>
  <metric>
    <method>>
      <name>NourineRaynaudAlgo.closedItemSet()</name>
      <line>116</line>
      <column>56</column>
      <ncss>14</ncss>
      <ccn>5</ccn>
    </method>
  </metric>
  <metric>
    <method>>
      <name>NourineRaynaudAlgo.isInFamily()</name>
      <line>138</line>
      <column>74</column>
      <ncss>6</ncss>
      <ccn>4</ccn>
    </method>
  </metric>
  <metric>
    <method>>
      <name>NourineRaynaudAlgo.linkConcepts()</name>
      <line>147</line>
      <column>76</column>
      <ncss>3</ncss>
      <ccn>1</ccn>
    </method>
  </metric>
  <metric>
    <method>>
      <name>NourineRaynaudAlgo.getConcepts()</name>
      <line>152</line>
      <column>50</column>
      <ncss>2</ncss>
      <ccn>1</ccn>
    </method>
  </metric>
  <metric>
    <method>>
      <name>NourineRaynaudAlgo.toString()</name>
      <line>157</line>
      <column>32</column>
      <ncss>21</ncss>
      <ccn>4</ccn>
    </method>
  </metric>
</jcsc>
